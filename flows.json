[
    {
        "id": "1116f30bad2304b7",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "be78b77c5b6be94c",
        "type": "mqtt-broker",
        "name": "MQTTBroker",
        "broker": "localhost",
        "port": 1883,
        "clientid": "id-0000",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "dc8b4b0d674982b8",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "dashboard_tab",
        "type": "ui_tab",
        "name": "Pico Sensors",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "dashboard_group",
        "type": "ui_group",
        "name": "Sensor Dashboard",
        "tab": "dashboard_tab",
        "order": 1,
        "disp": true,
        "width": 21,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e6ca3ef0cdef0010",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": 8086,
        "protocol": "http",
        "database": "database",
        "name": "InfluxDB",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://localhost:8086",
        "timeout": 10,
        "rejectUnauthorized": true
    },
    {
        "id": "c59ac60c10fa0149",
        "type": "inject",
        "z": "1116f30bad2304b7",
        "name": "Fetch from database on startup",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 2,
        "topic": "",
        "payload": "startup",
        "payloadType": "str",
        "x": 150,
        "y": 520,
        "wires": [
            [
                "313fcfc229c46d64",
                "b7bd24848f2f441f",
                "59d68c146b82e5df"
            ]
        ]
    },
    {
        "id": "535bf49298c57c05",
        "type": "mqtt in",
        "z": "1116f30bad2304b7",
        "name": "Temperature",
        "topic": "devices/temp",
        "qos": "1",
        "datatype": "auto-detect",
        "broker": "be78b77c5b6be94c",
        "nl": false,
        "rap": false,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 80,
        "wires": [
            [
                "f7ee738a5c577b53",
                "cd06b5c59748f4fd",
                "c402296191242afa"
            ]
        ]
    },
    {
        "id": "9b9cca1266c02493",
        "type": "mqtt in",
        "z": "1116f30bad2304b7",
        "name": "Humidity",
        "topic": "devices/hum",
        "qos": "1",
        "datatype": "auto-detect",
        "broker": "be78b77c5b6be94c",
        "nl": false,
        "rap": false,
        "rh": 0,
        "inputs": 0,
        "x": 80,
        "y": 220,
        "wires": [
            [
                "bd8a015760750285",
                "9687eac4042b1b21",
                "27c3a847230c14ba"
            ]
        ]
    },
    {
        "id": "771e2b3546803807",
        "type": "mqtt in",
        "z": "1116f30bad2304b7",
        "name": "Light",
        "topic": "devices/light",
        "qos": "1",
        "datatype": "auto-detect",
        "broker": "be78b77c5b6be94c",
        "nl": false,
        "rap": false,
        "rh": 0,
        "inputs": 0,
        "x": 70,
        "y": 360,
        "wires": [
            [
                "2e8390751434d56a",
                "16bb5c564342f58b",
                "1eff8006ef29ebba"
            ]
        ]
    },
    {
        "id": "a76354aa418f4a7c",
        "type": "ui_chart",
        "z": "1116f30bad2304b7",
        "name": "Temperature Chart",
        "group": "dashboard_group",
        "order": 4,
        "width": 7,
        "height": 7,
        "label": "Temperature Over Time (Â°C)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-40",
        "ymax": "60",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff0000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 910,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "e5fe2ace6e1e243e",
        "type": "ui_chart",
        "z": "1116f30bad2304b7",
        "name": "Humidity Chart",
        "group": "dashboard_group",
        "order": 6,
        "width": 7,
        "height": 7,
        "label": "Humidity Over Time (%)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#0000ff",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 900,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "7d55e3fdb6d6618b",
        "type": "ui_chart",
        "z": "1116f30bad2304b7",
        "name": "Light Chart",
        "group": "dashboard_group",
        "order": 5,
        "width": 7,
        "height": 7,
        "label": "Light Level Over Time (%)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#ffaa00",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 890,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "f7ee738a5c577b53",
        "type": "ui_gauge",
        "z": "1116f30bad2304b7",
        "name": "Temperature Gauge",
        "group": "dashboard_group",
        "order": 1,
        "width": 7,
        "height": 7,
        "gtype": "donut",
        "title": "Current Temperature",
        "label": "Â°C",
        "format": "{{payload.temperature}}",
        "min": "-40",
        "max": "125",
        "colors": [
            "#00ffff",
            "#00ff00",
            "#ff0000"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 320,
        "y": 40,
        "wires": []
    },
    {
        "id": "bd8a015760750285",
        "type": "ui_gauge",
        "z": "1116f30bad2304b7",
        "name": "Humidity Gauge",
        "group": "dashboard_group",
        "order": 3,
        "width": 7,
        "height": 7,
        "gtype": "donut",
        "title": "Current Humidity",
        "label": "%",
        "format": "{{payload.humidity}}",
        "min": 0,
        "max": 100,
        "colors": [
            "#ffff00",
            "#00ff00",
            "#0000ff"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 300,
        "y": 180,
        "wires": []
    },
    {
        "id": "2e8390751434d56a",
        "type": "ui_gauge",
        "z": "1116f30bad2304b7",
        "name": "Light Gauge",
        "group": "dashboard_group",
        "order": 2,
        "width": 7,
        "height": 7,
        "gtype": "donut",
        "title": "Current Light",
        "label": "%",
        "format": "{{payload.light}}",
        "min": 0,
        "max": 100,
        "colors": [
            "#0000ff",
            "#00ff00",
            "#ffff00"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 290,
        "y": 320,
        "wires": []
    },
    {
        "id": "cd06b5c59748f4fd",
        "type": "function",
        "z": "1116f30bad2304b7",
        "name": "Format for DB",
        "func": "if (typeof msg.payload === \"object\" && msg.payload.temperature !== undefined) {\n    msg.payload = parseFloat(msg.payload.temperature);\n} else {\n    msg.payload = parseFloat(msg.payload);\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 80,
        "wires": [
            [
                "329cdb4ac75e99a9"
            ]
        ]
    },
    {
        "id": "9687eac4042b1b21",
        "type": "function",
        "z": "1116f30bad2304b7",
        "name": "Format for DB",
        "func": "if (typeof msg.payload === \"object\" && msg.payload.humidity !== undefined) {\n    msg.payload = parseFloat(msg.payload.humidity);\n} else {\n    msg.payload = parseFloat(msg.payload);\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 220,
        "wires": [
            [
                "4efaaa3ce8f9a844"
            ]
        ]
    },
    {
        "id": "16bb5c564342f58b",
        "type": "function",
        "z": "1116f30bad2304b7",
        "name": "Format for DB",
        "func": "if (typeof msg.payload === \"object\" && msg.payload.light !== undefined) {\n    msg.payload = parseFloat(msg.payload.light);\n} else {\n    msg.payload = parseFloat(msg.payload);\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 360,
        "wires": [
            [
                "529bccfbf44def45"
            ]
        ]
    },
    {
        "id": "c402296191242afa",
        "type": "function",
        "z": "1116f30bad2304b7",
        "name": "Format for Chart",
        "func": "// Extract temperature value from MQTT payload\nlet tempValue;\nif (typeof msg.payload === \"object\" && msg.payload.temperature !== undefined) {\n    tempValue = parseFloat(msg.payload.temperature);\n} else {\n    tempValue = parseFloat(msg.payload);\n}\n\n// Format for chart (current timestamp)\nconst chartMsg = {\n    payload: tempValue,\n    timestamp: Date.now(),\n    topic: \"devices/temp\"\n};\n\nreturn chartMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 120,
        "wires": [
            [
                "a76354aa418f4a7c"
            ]
        ]
    },
    {
        "id": "27c3a847230c14ba",
        "type": "function",
        "z": "1116f30bad2304b7",
        "name": "Format for Chart",
        "func": "// Extract humidity value from MQTT payload\nlet humValue;\nif (typeof msg.payload === \"object\" && msg.payload.humidity !== undefined) {\n    humValue = parseFloat(msg.payload.humidity);\n} else {\n    humValue = parseFloat(msg.payload);\n}\n\n// Format for chart (current timestamp)\nconst chartMsg = {\n    payload: humValue,\n    timestamp: Date.now(),\n    topic: \"devices/hum\"\n};\n\nreturn chartMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 260,
        "wires": [
            [
                "e5fe2ace6e1e243e"
            ]
        ]
    },
    {
        "id": "1eff8006ef29ebba",
        "type": "function",
        "z": "1116f30bad2304b7",
        "name": "Format for Chart",
        "func": "// Extract light value from MQTT payload\nlet lightValue;\nif (typeof msg.payload === \"object\" && msg.payload.light !== undefined) {\n    lightValue = parseFloat(msg.payload.light);\n} else {\n    lightValue = parseFloat(msg.payload);\n}\n\n// Format for chart (current timestamp)\nconst chartMsg = {\n    payload: lightValue,\n    timestamp: Date.now(),\n    topic: \"devices/light\"\n};\n\nreturn chartMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 400,
        "wires": [
            [
                "7d55e3fdb6d6618b"
            ]
        ]
    },
    {
        "id": "329cdb4ac75e99a9",
        "type": "influxdb out",
        "z": "1116f30bad2304b7",
        "influxdb": "e6ca3ef0cdef0010",
        "name": "Store Temp",
        "measurement": "temperature",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "s",
        "retentionPolicyV18Flux": "",
        "org": "LNU",
        "bucket": "SleepingMonitor",
        "x": 470,
        "y": 80,
        "wires": []
    },
    {
        "id": "4efaaa3ce8f9a844",
        "type": "influxdb out",
        "z": "1116f30bad2304b7",
        "influxdb": "e6ca3ef0cdef0010",
        "name": "Store Humidity",
        "measurement": "humidity",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "s",
        "retentionPolicyV18Flux": "",
        "org": "LNU",
        "bucket": "SleepingMonitor",
        "x": 480,
        "y": 220,
        "wires": []
    },
    {
        "id": "529bccfbf44def45",
        "type": "influxdb out",
        "z": "1116f30bad2304b7",
        "influxdb": "e6ca3ef0cdef0010",
        "name": "Store Light",
        "measurement": "light",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "s",
        "retentionPolicyV18Flux": "",
        "org": "LNU",
        "bucket": "SleepingMonitor",
        "x": 470,
        "y": 360,
        "wires": []
    },
    {
        "id": "313fcfc229c46d64",
        "type": "influxdb in",
        "z": "1116f30bad2304b7",
        "influxdb": "e6ca3ef0cdef0010",
        "name": "Get Temp History",
        "query": "from(bucket: \"SleepingMonitor\")\n  |> range(start: -24h)\n  |> filter(fn: (r) => r._measurement == \"temperature\" and r._field == \"value\")\n  |> yield(name: \"temperature\")",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "LNU",
        "x": 430,
        "y": 480,
        "wires": [
            [
                "c304eed7beec2f6e"
            ]
        ]
    },
    {
        "id": "b7bd24848f2f441f",
        "type": "influxdb in",
        "z": "1116f30bad2304b7",
        "influxdb": "e6ca3ef0cdef0010",
        "name": "Get Humidity History",
        "query": "from(bucket: \"SleepingMonitor\")\n  |> range(start: -24h)\n  |> filter(fn: (r) => r._measurement == \"humidity\" and r._field == \"value\")\n  |> yield(name: \"humidity\")",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "LNU",
        "x": 440,
        "y": 520,
        "wires": [
            [
                "4413d3d0f18ba493"
            ]
        ]
    },
    {
        "id": "59d68c146b82e5df",
        "type": "influxdb in",
        "z": "1116f30bad2304b7",
        "influxdb": "e6ca3ef0cdef0010",
        "name": "Get Light History",
        "query": "from(bucket: \"SleepingMonitor\")\n  |> range(start: -24h)\n  |> filter(fn: (r) => r._measurement == \"light\" and r._field == \"value\")\n  |> yield(name: \"light\")",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "LNU",
        "x": 430,
        "y": 560,
        "wires": [
            [
                "620ad1c29832bfcb"
            ]
        ]
    },
    {
        "id": "c304eed7beec2f6e",
        "type": "function",
        "z": "1116f30bad2304b7",
        "name": "Process Temp History",
        "func": "if (!Array.isArray(msg.payload)) {\n    return null;\n}\n\n// Send each historical data point to the chart\nmsg.payload.forEach(function(point) {\n    const chartMsg = {\n        payload: parseFloat(point._value),\n        timestamp: new Date(point._time).getTime(),\n        topic: \"devices/temp\"\n    };\n    node.send(chartMsg);\n});\n\nreturn null;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 480,
        "wires": [
            [
                "a76354aa418f4a7c"
            ]
        ]
    },
    {
        "id": "4413d3d0f18ba493",
        "type": "function",
        "z": "1116f30bad2304b7",
        "name": "Process Humidity History",
        "func": "if (!Array.isArray(msg.payload)) {\n    return null;\n}\n\n// Send each historical data point to the chart\nmsg.payload.forEach(function(point) {\n    const chartMsg = {\n        payload: parseFloat(point._value),\n        timestamp: new Date(point._time).getTime(),\n        topic: \"devices/hum\"\n    };\n    node.send(chartMsg);\n});\n\nreturn null;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 520,
        "wires": [
            [
                "e5fe2ace6e1e243e"
            ]
        ]
    },
    {
        "id": "620ad1c29832bfcb",
        "type": "function",
        "z": "1116f30bad2304b7",
        "name": "Process Light History",
        "func": "if (!Array.isArray(msg.payload)) {\n    return null;\n}\n\n// Send each historical data point to the chart\nmsg.payload.forEach(function(point) {\n    const chartMsg = {\n        payload: parseFloat(point._value),\n        timestamp: new Date(point._time).getTime(),\n        topic: \"devices/light\"\n    };\n    node.send(chartMsg);\n});\n\nreturn null;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 560,
        "wires": [
            [
                "7d55e3fdb6d6618b"
            ]
        ]
    }
]